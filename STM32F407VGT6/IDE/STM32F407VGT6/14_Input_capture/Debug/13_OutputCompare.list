
13_OutputCompare.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000240  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003c8  080003d0  000013d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003c8  080003c8  000013d0  2**0
                  CONTENTS
  4 .ARM          00000000  080003c8  080003c8  000013d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003c8  080003d0  000013d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003c8  080003c8  000013c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003cc  080003cc  000013cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000013d0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000004a7  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000136  00000000  00000000  000018a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  000019e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000046  00000000  00000000  00001a50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000eab  00000000  00000000  00001a96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d76  00000000  00000000  00002941  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008bf8c  00000000  00000000  000036b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0008f643  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000a8  00000000  00000000  0008f688  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006a  00000000  00000000  0008f730  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080003b0 	.word	0x080003b0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080003b0 	.word	0x080003b0

080001c8 <main>:




int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	af00      	add	r7, sp, #0

	timer4_PD12_PD13_PD14_PD15_output_compare();
 80001cc:	f000 f802 	bl	80001d4 <timer4_PD12_PD13_PD14_PD15_output_compare>


	while(1)
 80001d0:	bf00      	nop
 80001d2:	e7fd      	b.n	80001d0 <main+0x8>

080001d4 <timer4_PD12_PD13_PD14_PD15_output_compare>:
	TIM4->CR1 = CR1_CEN;
}


void timer4_PD12_PD13_PD14_PD15_output_compare(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
	Clear the timer counter
	Enable the timer
	*/

	//Enable clock access to GPIOD
	RCC->AHB1ENR |= GPIODEN;
 80001d8:	4b4b      	ldr	r3, [pc, #300]	@ (8000308 <timer4_PD12_PD13_PD14_PD15_output_compare+0x134>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001dc:	4a4a      	ldr	r2, [pc, #296]	@ (8000308 <timer4_PD12_PD13_PD14_PD15_output_compare+0x134>)
 80001de:	f043 0308 	orr.w	r3, r3, #8
 80001e2:	6313      	str	r3, [r2, #48]	@ 0x30

	//Set PD12 mode to alternate function
	GPIOD->MODER &=~(1U<<24);
 80001e4:	4b49      	ldr	r3, [pc, #292]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a48      	ldr	r2, [pc, #288]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 80001ea:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80001ee:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |=(1U<<25);
 80001f0:	4b46      	ldr	r3, [pc, #280]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a45      	ldr	r2, [pc, #276]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 80001f6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80001fa:	6013      	str	r3, [r2, #0]
	//Set PD13 mode to alternate function
	GPIOD->MODER &=~(1U<<26);
 80001fc:	4b43      	ldr	r3, [pc, #268]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a42      	ldr	r2, [pc, #264]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000202:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8000206:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |=(1U<<27);
 8000208:	4b40      	ldr	r3, [pc, #256]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a3f      	ldr	r2, [pc, #252]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800020e:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8000212:	6013      	str	r3, [r2, #0]
	//Set PD14 mode to alternate function
	GPIOD->MODER &=~(1U<<28);
 8000214:	4b3d      	ldr	r3, [pc, #244]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a3c      	ldr	r2, [pc, #240]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800021a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800021e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |=(1U<<29);
 8000220:	4b3a      	ldr	r3, [pc, #232]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a39      	ldr	r2, [pc, #228]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000226:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800022a:	6013      	str	r3, [r2, #0]
	//Set PD15 mode to alternate function
	GPIOD->MODER &=~(1U<<30);
 800022c:	4b37      	ldr	r3, [pc, #220]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a36      	ldr	r2, [pc, #216]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000232:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8000236:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |=(1U<<31);
 8000238:	4b34      	ldr	r3, [pc, #208]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a33      	ldr	r2, [pc, #204]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800023e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000242:	6013      	str	r3, [r2, #0]

	//SET PD12 alternate function to AF2
	GPIOD->AFR[1] |= AFR12_TIM;
 8000244:	4b31      	ldr	r3, [pc, #196]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000246:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000248:	4a30      	ldr	r2, [pc, #192]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800024a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800024e:	6253      	str	r3, [r2, #36]	@ 0x24
	//SET PD13 alternate function to AF2
	GPIOD->AFR[1] |= AFR13_TIM;
 8000250:	4b2e      	ldr	r3, [pc, #184]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000252:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000254:	4a2d      	ldr	r2, [pc, #180]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000256:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800025a:	6253      	str	r3, [r2, #36]	@ 0x24
	//SET PD14 alternate function to AF2
	GPIOD->AFR[1] |= AFR14_TIM;
 800025c:	4b2b      	ldr	r3, [pc, #172]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800025e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000260:	4a2a      	ldr	r2, [pc, #168]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 8000262:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000266:	6253      	str	r3, [r2, #36]	@ 0x24
	//SET PD15 alternate function to AF2
	GPIOD->AFR[1] |= AFR15_TIM;
 8000268:	4b28      	ldr	r3, [pc, #160]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800026a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800026c:	4a27      	ldr	r2, [pc, #156]	@ (800030c <timer4_PD12_PD13_PD14_PD15_output_compare+0x138>)
 800026e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000272:	6253      	str	r3, [r2, #36]	@ 0x24

	//Enable clock access to timer 4
	RCC->APB1ENR |= TIMER4EN;
 8000274:	4b24      	ldr	r3, [pc, #144]	@ (8000308 <timer4_PD12_PD13_PD14_PD15_output_compare+0x134>)
 8000276:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000278:	4a23      	ldr	r2, [pc, #140]	@ (8000308 <timer4_PD12_PD13_PD14_PD15_output_compare+0x134>)
 800027a:	f043 0304 	orr.w	r3, r3, #4
 800027e:	6413      	str	r3, [r2, #64]	@ 0x40
		//Set pre-scaler value
	TIM4->PSC = 1600-1;  //16 000 000 /1 600 = 10 000     reference manual 18.4.11
 8000280:	4b23      	ldr	r3, [pc, #140]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 8000282:	f240 623f 	movw	r2, #1599	@ 0x63f
 8000286:	629a      	str	r2, [r3, #40]	@ 0x28
		//Set auto reload value
	TIM4->ARR = 10000-1; // 10 000 / 1000 = 1		reference manual 18.4.12
 8000288:	4b21      	ldr	r3, [pc, #132]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 800028a:	f242 720f 	movw	r2, #9999	@ 0x270f
 800028e:	62da      	str	r2, [r3, #44]	@ 0x2c

	/*Set output compare toggle mode for channel 1*/
	TIM4->CCMR1 |= O1OC_TOGGLE;
 8000290:	4b1f      	ldr	r3, [pc, #124]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 8000292:	699b      	ldr	r3, [r3, #24]
 8000294:	4a1e      	ldr	r2, [pc, #120]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 8000296:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 800029a:	6193      	str	r3, [r2, #24]
	/*Set output compare toggle mode for channel 2*/
	TIM4->CCMR1 |= O2OC_TOGGLE;
 800029c:	4b1c      	ldr	r3, [pc, #112]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 800029e:	699b      	ldr	r3, [r3, #24]
 80002a0:	4a1b      	ldr	r2, [pc, #108]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002a2:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 80002a6:	6193      	str	r3, [r2, #24]
	/*Set output compare toggle mode for channel 3*/
	TIM4->CCMR2 |= O3OC_TOGGLE;
 80002a8:	4b19      	ldr	r3, [pc, #100]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002aa:	69db      	ldr	r3, [r3, #28]
 80002ac:	4a18      	ldr	r2, [pc, #96]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002ae:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 80002b2:	61d3      	str	r3, [r2, #28]
	/*Set output compare toggle mode for channel 4*/
	TIM4->CCMR2 |= O4OC_TOGGLE;
 80002b4:	4b16      	ldr	r3, [pc, #88]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002b6:	69db      	ldr	r3, [r3, #28]
 80002b8:	4a15      	ldr	r2, [pc, #84]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002ba:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 80002be:	61d3      	str	r3, [r2, #28]

	/*Enable timer4 ch1 in capture compare mode  CCER*/
	TIM4->CCER |= CCER_CC1E;
 80002c0:	4b13      	ldr	r3, [pc, #76]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002c2:	6a1b      	ldr	r3, [r3, #32]
 80002c4:	4a12      	ldr	r2, [pc, #72]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002c6:	f043 0301 	orr.w	r3, r3, #1
 80002ca:	6213      	str	r3, [r2, #32]
	/*Enable timer4 ch2 in capture compare mode  CCER*/
	TIM4->CCER |= CCER_CC2E;
 80002cc:	4b10      	ldr	r3, [pc, #64]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002ce:	6a1b      	ldr	r3, [r3, #32]
 80002d0:	4a0f      	ldr	r2, [pc, #60]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002d2:	f043 0310 	orr.w	r3, r3, #16
 80002d6:	6213      	str	r3, [r2, #32]
	/*Enable timer4 ch3 in capture compare mode  CCER*/
	TIM4->CCER |= CCER_CC3E;
 80002d8:	4b0d      	ldr	r3, [pc, #52]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002da:	6a1b      	ldr	r3, [r3, #32]
 80002dc:	4a0c      	ldr	r2, [pc, #48]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002de:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80002e2:	6213      	str	r3, [r2, #32]
	/*Enable timer4 ch4 in capture compare mode  CCER*/
	TIM4->CCER |= CCER_CC4E;
 80002e4:	4b0a      	ldr	r3, [pc, #40]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002e6:	6a1b      	ldr	r3, [r3, #32]
 80002e8:	4a09      	ldr	r2, [pc, #36]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002ea:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80002ee:	6213      	str	r3, [r2, #32]

	//Clear the timer counter
	TIM4->CNT = 0;
 80002f0:	4b07      	ldr	r3, [pc, #28]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002f2:	2200      	movs	r2, #0
 80002f4:	625a      	str	r2, [r3, #36]	@ 0x24
		//Enable the timer
	TIM4->CR1 = CR1_CEN;
 80002f6:	4b06      	ldr	r3, [pc, #24]	@ (8000310 <timer4_PD12_PD13_PD14_PD15_output_compare+0x13c>)
 80002f8:	2201      	movs	r2, #1
 80002fa:	601a      	str	r2, [r3, #0]
}
 80002fc:	bf00      	nop
 80002fe:	46bd      	mov	sp, r7
 8000300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000304:	4770      	bx	lr
 8000306:	bf00      	nop
 8000308:	40023800 	.word	0x40023800
 800030c:	40020c00 	.word	0x40020c00
 8000310:	40000800 	.word	0x40000800

08000314 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000314:	480d      	ldr	r0, [pc, #52]	@ (800034c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000316:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000318:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800031c:	480c      	ldr	r0, [pc, #48]	@ (8000350 <LoopForever+0x6>)
  ldr r1, =_edata
 800031e:	490d      	ldr	r1, [pc, #52]	@ (8000354 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000320:	4a0d      	ldr	r2, [pc, #52]	@ (8000358 <LoopForever+0xe>)
  movs r3, #0
 8000322:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000324:	e002      	b.n	800032c <LoopCopyDataInit>

08000326 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000326:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000328:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800032a:	3304      	adds	r3, #4

0800032c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800032c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000330:	d3f9      	bcc.n	8000326 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000332:	4a0a      	ldr	r2, [pc, #40]	@ (800035c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000334:	4c0a      	ldr	r4, [pc, #40]	@ (8000360 <LoopForever+0x16>)
  movs r3, #0
 8000336:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000338:	e001      	b.n	800033e <LoopFillZerobss>

0800033a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800033a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800033c:	3204      	adds	r2, #4

0800033e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000340:	d3fb      	bcc.n	800033a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000342:	f000 f811 	bl	8000368 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000346:	f7ff ff3f 	bl	80001c8 <main>

0800034a <LoopForever>:

LoopForever:
  b LoopForever
 800034a:	e7fe      	b.n	800034a <LoopForever>
  ldr   r0, =_estack
 800034c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000350:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000354:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000358:	080003d0 	.word	0x080003d0
  ldr r2, =_sbss
 800035c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000360:	2000001c 	.word	0x2000001c

08000364 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000364:	e7fe      	b.n	8000364 <ADC_IRQHandler>
	...

08000368 <__libc_init_array>:
 8000368:	b570      	push	{r4, r5, r6, lr}
 800036a:	4d0d      	ldr	r5, [pc, #52]	@ (80003a0 <__libc_init_array+0x38>)
 800036c:	4c0d      	ldr	r4, [pc, #52]	@ (80003a4 <__libc_init_array+0x3c>)
 800036e:	1b64      	subs	r4, r4, r5
 8000370:	10a4      	asrs	r4, r4, #2
 8000372:	2600      	movs	r6, #0
 8000374:	42a6      	cmp	r6, r4
 8000376:	d109      	bne.n	800038c <__libc_init_array+0x24>
 8000378:	4d0b      	ldr	r5, [pc, #44]	@ (80003a8 <__libc_init_array+0x40>)
 800037a:	4c0c      	ldr	r4, [pc, #48]	@ (80003ac <__libc_init_array+0x44>)
 800037c:	f000 f818 	bl	80003b0 <_init>
 8000380:	1b64      	subs	r4, r4, r5
 8000382:	10a4      	asrs	r4, r4, #2
 8000384:	2600      	movs	r6, #0
 8000386:	42a6      	cmp	r6, r4
 8000388:	d105      	bne.n	8000396 <__libc_init_array+0x2e>
 800038a:	bd70      	pop	{r4, r5, r6, pc}
 800038c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000390:	4798      	blx	r3
 8000392:	3601      	adds	r6, #1
 8000394:	e7ee      	b.n	8000374 <__libc_init_array+0xc>
 8000396:	f855 3b04 	ldr.w	r3, [r5], #4
 800039a:	4798      	blx	r3
 800039c:	3601      	adds	r6, #1
 800039e:	e7f2      	b.n	8000386 <__libc_init_array+0x1e>
 80003a0:	080003c8 	.word	0x080003c8
 80003a4:	080003c8 	.word	0x080003c8
 80003a8:	080003c8 	.word	0x080003c8
 80003ac:	080003cc 	.word	0x080003cc

080003b0 <_init>:
 80003b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003b2:	bf00      	nop
 80003b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b6:	bc08      	pop	{r3}
 80003b8:	469e      	mov	lr, r3
 80003ba:	4770      	bx	lr

080003bc <_fini>:
 80003bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003be:	bf00      	nop
 80003c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003c2:	bc08      	pop	{r3}
 80003c4:	469e      	mov	lr, r3
 80003c6:	4770      	bx	lr
