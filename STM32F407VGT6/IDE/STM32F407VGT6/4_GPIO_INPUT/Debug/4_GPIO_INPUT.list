
4_GPIO_INPUT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002bc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000444  0800044c  0000144c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000444  08000444  0000144c  2**0
                  CONTENTS
  4 .ARM          00000000  08000444  08000444  0000144c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000444  0800044c  0000144c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000444  08000444  00001444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000448  08000448  00001448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000144c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000144c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000003d5  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000102  00000000  00000000  00001851  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00001958  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  000019a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000181e1  00000000  00000000  000019cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000070a  00000000  00000000  00019bae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00088454  00000000  00000000  0001a2b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a270c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  000a2750  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000066  00000000  00000000  000a27a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800042c 	.word	0x0800042c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800042c 	.word	0x0800042c

080001c8 <main>:
#define RED_LED_PIN					PIN12
#define GREEN_LED_PIN				PIN14
#define BLUE_LED_PIN				PIN15

int main(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b08b      	sub	sp, #44	@ 0x2c
 80001cc:	af00      	add	r7, sp, #0
	//1. Enable clock access to GPIOA/D
	RCC->AHB1ENR |=GPIODEN;
 80001ce:	4b6c      	ldr	r3, [pc, #432]	@ (8000380 <main+0x1b8>)
 80001d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d2:	4a6b      	ldr	r2, [pc, #428]	@ (8000380 <main+0x1b8>)
 80001d4:	f043 0308 	orr.w	r3, r3, #8
 80001d8:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |=GPIOAEN;
 80001da:	4b69      	ldr	r3, [pc, #420]	@ (8000380 <main+0x1b8>)
 80001dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001de:	4a68      	ldr	r2, [pc, #416]	@ (8000380 <main+0x1b8>)
 80001e0:	f043 0301 	orr.w	r3, r3, #1
 80001e4:	6313      	str	r3, [r2, #48]	@ 0x30

	//2. Set LED Pins as OP pins
	GPIOD->MODER |= (1U<<24); //Pin12
 80001e6:	4b67      	ldr	r3, [pc, #412]	@ (8000384 <main+0x1bc>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a66      	ldr	r2, [pc, #408]	@ (8000384 <main+0x1bc>)
 80001ec:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001f0:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1U<<25);
 80001f2:	4b64      	ldr	r3, [pc, #400]	@ (8000384 <main+0x1bc>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a63      	ldr	r2, [pc, #396]	@ (8000384 <main+0x1bc>)
 80001f8:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80001fc:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<26); //Pin13
 80001fe:	4b61      	ldr	r3, [pc, #388]	@ (8000384 <main+0x1bc>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a60      	ldr	r2, [pc, #384]	@ (8000384 <main+0x1bc>)
 8000204:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000208:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1U<<27);
 800020a:	4b5e      	ldr	r3, [pc, #376]	@ (8000384 <main+0x1bc>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	4a5d      	ldr	r2, [pc, #372]	@ (8000384 <main+0x1bc>)
 8000210:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8000214:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<28); //Pin14
 8000216:	4b5b      	ldr	r3, [pc, #364]	@ (8000384 <main+0x1bc>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	4a5a      	ldr	r2, [pc, #360]	@ (8000384 <main+0x1bc>)
 800021c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000220:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1U<<29);
 8000222:	4b58      	ldr	r3, [pc, #352]	@ (8000384 <main+0x1bc>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	4a57      	ldr	r2, [pc, #348]	@ (8000384 <main+0x1bc>)
 8000228:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800022c:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<30); //Pin15
 800022e:	4b55      	ldr	r3, [pc, #340]	@ (8000384 <main+0x1bc>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4a54      	ldr	r2, [pc, #336]	@ (8000384 <main+0x1bc>)
 8000234:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000238:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1U<<31);
 800023a:	4b52      	ldr	r3, [pc, #328]	@ (8000384 <main+0x1bc>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a51      	ldr	r2, [pc, #324]	@ (8000384 <main+0x1bc>)
 8000240:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8000244:	6013      	str	r3, [r2, #0]

	//3. Set pin23 as input pin
	GPIOA->MODER &=~(1U<<0); //Pin23 PA0
 8000246:	4b50      	ldr	r3, [pc, #320]	@ (8000388 <main+0x1c0>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a4f      	ldr	r2, [pc, #316]	@ (8000388 <main+0x1c0>)
 800024c:	f023 0301 	bic.w	r3, r3, #1
 8000250:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<1);
 8000252:	4b4d      	ldr	r3, [pc, #308]	@ (8000388 <main+0x1c0>)
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	4a4c      	ldr	r2, [pc, #304]	@ (8000388 <main+0x1c0>)
 8000258:	f023 0302 	bic.w	r3, r3, #2
 800025c:	6013      	str	r3, [r2, #0]

	while(1)
	{
		/*Check if button is pressed (Normally high)*/
		if(GPIOA->IDR & PUSH_BUTTON)
 800025e:	4b4a      	ldr	r3, [pc, #296]	@ (8000388 <main+0x1c0>)
 8000260:	691b      	ldr	r3, [r3, #16]
 8000262:	f003 0301 	and.w	r3, r3, #1
 8000266:	2b00      	cmp	r3, #0
 8000268:	d079      	beq.n	800035e <main+0x196>
			{
			for(int j=0; j<10; j++)
 800026a:	2300      	movs	r3, #0
 800026c:	627b      	str	r3, [r7, #36]	@ 0x24
 800026e:	e072      	b.n	8000356 <main+0x18e>
				{
				GPIOD->BSRR = ORANGE_LED_PIN;
 8000270:	4b44      	ldr	r3, [pc, #272]	@ (8000384 <main+0x1bc>)
 8000272:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000276:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 8000278:	2300      	movs	r3, #0
 800027a:	623b      	str	r3, [r7, #32]
 800027c:	e002      	b.n	8000284 <main+0xbc>
 800027e:	6a3b      	ldr	r3, [r7, #32]
 8000280:	3301      	adds	r3, #1
 8000282:	623b      	str	r3, [r7, #32]
 8000284:	6a3b      	ldr	r3, [r7, #32]
 8000286:	4a41      	ldr	r2, [pc, #260]	@ (800038c <main+0x1c4>)
 8000288:	4293      	cmp	r3, r2
 800028a:	ddf8      	ble.n	800027e <main+0xb6>
				GPIOD->BSRR = (1U<<29);
 800028c:	4b3d      	ldr	r3, [pc, #244]	@ (8000384 <main+0x1bc>)
 800028e:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 8000292:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 8000294:	2300      	movs	r3, #0
 8000296:	61fb      	str	r3, [r7, #28]
 8000298:	e002      	b.n	80002a0 <main+0xd8>
 800029a:	69fb      	ldr	r3, [r7, #28]
 800029c:	3301      	adds	r3, #1
 800029e:	61fb      	str	r3, [r7, #28]
 80002a0:	69fb      	ldr	r3, [r7, #28]
 80002a2:	4a3a      	ldr	r2, [pc, #232]	@ (800038c <main+0x1c4>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	ddf8      	ble.n	800029a <main+0xd2>

				GPIOD->BSRR = RED_LED_PIN;
 80002a8:	4b36      	ldr	r3, [pc, #216]	@ (8000384 <main+0x1bc>)
 80002aa:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80002ae:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 80002b0:	2300      	movs	r3, #0
 80002b2:	61bb      	str	r3, [r7, #24]
 80002b4:	e002      	b.n	80002bc <main+0xf4>
 80002b6:	69bb      	ldr	r3, [r7, #24]
 80002b8:	3301      	adds	r3, #1
 80002ba:	61bb      	str	r3, [r7, #24]
 80002bc:	69bb      	ldr	r3, [r7, #24]
 80002be:	4a33      	ldr	r2, [pc, #204]	@ (800038c <main+0x1c4>)
 80002c0:	4293      	cmp	r3, r2
 80002c2:	ddf8      	ble.n	80002b6 <main+0xee>
				GPIOD->BSRR = (1U<<28);
 80002c4:	4b2f      	ldr	r3, [pc, #188]	@ (8000384 <main+0x1bc>)
 80002c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80002ca:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 80002cc:	2300      	movs	r3, #0
 80002ce:	617b      	str	r3, [r7, #20]
 80002d0:	e002      	b.n	80002d8 <main+0x110>
 80002d2:	697b      	ldr	r3, [r7, #20]
 80002d4:	3301      	adds	r3, #1
 80002d6:	617b      	str	r3, [r7, #20]
 80002d8:	697b      	ldr	r3, [r7, #20]
 80002da:	4a2c      	ldr	r2, [pc, #176]	@ (800038c <main+0x1c4>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	ddf8      	ble.n	80002d2 <main+0x10a>

				GPIOD->BSRR = BLUE_LED_PIN;
 80002e0:	4b28      	ldr	r3, [pc, #160]	@ (8000384 <main+0x1bc>)
 80002e2:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80002e6:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 80002e8:	2300      	movs	r3, #0
 80002ea:	613b      	str	r3, [r7, #16]
 80002ec:	e002      	b.n	80002f4 <main+0x12c>
 80002ee:	693b      	ldr	r3, [r7, #16]
 80002f0:	3301      	adds	r3, #1
 80002f2:	613b      	str	r3, [r7, #16]
 80002f4:	693b      	ldr	r3, [r7, #16]
 80002f6:	4a25      	ldr	r2, [pc, #148]	@ (800038c <main+0x1c4>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	ddf8      	ble.n	80002ee <main+0x126>
				GPIOD->BSRR = (1U<<31);
 80002fc:	4b21      	ldr	r3, [pc, #132]	@ (8000384 <main+0x1bc>)
 80002fe:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8000302:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 8000304:	2300      	movs	r3, #0
 8000306:	60fb      	str	r3, [r7, #12]
 8000308:	e002      	b.n	8000310 <main+0x148>
 800030a:	68fb      	ldr	r3, [r7, #12]
 800030c:	3301      	adds	r3, #1
 800030e:	60fb      	str	r3, [r7, #12]
 8000310:	68fb      	ldr	r3, [r7, #12]
 8000312:	4a1e      	ldr	r2, [pc, #120]	@ (800038c <main+0x1c4>)
 8000314:	4293      	cmp	r3, r2
 8000316:	ddf8      	ble.n	800030a <main+0x142>

				GPIOD->BSRR = GREEN_LED_PIN;
 8000318:	4b1a      	ldr	r3, [pc, #104]	@ (8000384 <main+0x1bc>)
 800031a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800031e:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 8000320:	2300      	movs	r3, #0
 8000322:	60bb      	str	r3, [r7, #8]
 8000324:	e002      	b.n	800032c <main+0x164>
 8000326:	68bb      	ldr	r3, [r7, #8]
 8000328:	3301      	adds	r3, #1
 800032a:	60bb      	str	r3, [r7, #8]
 800032c:	68bb      	ldr	r3, [r7, #8]
 800032e:	4a17      	ldr	r2, [pc, #92]	@ (800038c <main+0x1c4>)
 8000330:	4293      	cmp	r3, r2
 8000332:	ddf8      	ble.n	8000326 <main+0x15e>
				GPIOD->BSRR = (1U<<30);
 8000334:	4b13      	ldr	r3, [pc, #76]	@ (8000384 <main+0x1bc>)
 8000336:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800033a:	619a      	str	r2, [r3, #24]
				for(int i=0; i<100000; i++){}
 800033c:	2300      	movs	r3, #0
 800033e:	607b      	str	r3, [r7, #4]
 8000340:	e002      	b.n	8000348 <main+0x180>
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	3301      	adds	r3, #1
 8000346:	607b      	str	r3, [r7, #4]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a10      	ldr	r2, [pc, #64]	@ (800038c <main+0x1c4>)
 800034c:	4293      	cmp	r3, r2
 800034e:	ddf8      	ble.n	8000342 <main+0x17a>
			for(int j=0; j<10; j++)
 8000350:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000352:	3301      	adds	r3, #1
 8000354:	627b      	str	r3, [r7, #36]	@ 0x24
 8000356:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000358:	2b09      	cmp	r3, #9
 800035a:	dd89      	ble.n	8000270 <main+0xa8>
 800035c:	e77f      	b.n	800025e <main+0x96>
				}
			}
		else
			{
			GPIOD->BSRR = (1U<<29);//turn off leds
 800035e:	4b09      	ldr	r3, [pc, #36]	@ (8000384 <main+0x1bc>)
 8000360:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 8000364:	619a      	str	r2, [r3, #24]
			GPIOD->BSRR = (1U<<28);
 8000366:	4b07      	ldr	r3, [pc, #28]	@ (8000384 <main+0x1bc>)
 8000368:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800036c:	619a      	str	r2, [r3, #24]
			GPIOD->BSRR = (1U<<31);
 800036e:	4b05      	ldr	r3, [pc, #20]	@ (8000384 <main+0x1bc>)
 8000370:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8000374:	619a      	str	r2, [r3, #24]
			GPIOD->BSRR = (1U<<30);
 8000376:	4b03      	ldr	r3, [pc, #12]	@ (8000384 <main+0x1bc>)
 8000378:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800037c:	619a      	str	r2, [r3, #24]
		if(GPIOA->IDR & PUSH_BUTTON)
 800037e:	e76e      	b.n	800025e <main+0x96>
 8000380:	40023800 	.word	0x40023800
 8000384:	40020c00 	.word	0x40020c00
 8000388:	40020000 	.word	0x40020000
 800038c:	0001869f 	.word	0x0001869f

08000390 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000390:	480d      	ldr	r0, [pc, #52]	@ (80003c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000392:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000394:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000398:	480c      	ldr	r0, [pc, #48]	@ (80003cc <LoopForever+0x6>)
  ldr r1, =_edata
 800039a:	490d      	ldr	r1, [pc, #52]	@ (80003d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800039c:	4a0d      	ldr	r2, [pc, #52]	@ (80003d4 <LoopForever+0xe>)
  movs r3, #0
 800039e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003a0:	e002      	b.n	80003a8 <LoopCopyDataInit>

080003a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003a6:	3304      	adds	r3, #4

080003a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003ac:	d3f9      	bcc.n	80003a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ae:	4a0a      	ldr	r2, [pc, #40]	@ (80003d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003b0:	4c0a      	ldr	r4, [pc, #40]	@ (80003dc <LoopForever+0x16>)
  movs r3, #0
 80003b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003b4:	e001      	b.n	80003ba <LoopFillZerobss>

080003b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003b8:	3204      	adds	r2, #4

080003ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003bc:	d3fb      	bcc.n	80003b6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003be:	f000 f811 	bl	80003e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003c2:	f7ff ff01 	bl	80001c8 <main>

080003c6 <LoopForever>:

LoopForever:
  b LoopForever
 80003c6:	e7fe      	b.n	80003c6 <LoopForever>
  ldr   r0, =_estack
 80003c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003d0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003d4:	0800044c 	.word	0x0800044c
  ldr r2, =_sbss
 80003d8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003dc:	2000001c 	.word	0x2000001c

080003e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003e0:	e7fe      	b.n	80003e0 <ADC_IRQHandler>
	...

080003e4 <__libc_init_array>:
 80003e4:	b570      	push	{r4, r5, r6, lr}
 80003e6:	4d0d      	ldr	r5, [pc, #52]	@ (800041c <__libc_init_array+0x38>)
 80003e8:	4c0d      	ldr	r4, [pc, #52]	@ (8000420 <__libc_init_array+0x3c>)
 80003ea:	1b64      	subs	r4, r4, r5
 80003ec:	10a4      	asrs	r4, r4, #2
 80003ee:	2600      	movs	r6, #0
 80003f0:	42a6      	cmp	r6, r4
 80003f2:	d109      	bne.n	8000408 <__libc_init_array+0x24>
 80003f4:	4d0b      	ldr	r5, [pc, #44]	@ (8000424 <__libc_init_array+0x40>)
 80003f6:	4c0c      	ldr	r4, [pc, #48]	@ (8000428 <__libc_init_array+0x44>)
 80003f8:	f000 f818 	bl	800042c <_init>
 80003fc:	1b64      	subs	r4, r4, r5
 80003fe:	10a4      	asrs	r4, r4, #2
 8000400:	2600      	movs	r6, #0
 8000402:	42a6      	cmp	r6, r4
 8000404:	d105      	bne.n	8000412 <__libc_init_array+0x2e>
 8000406:	bd70      	pop	{r4, r5, r6, pc}
 8000408:	f855 3b04 	ldr.w	r3, [r5], #4
 800040c:	4798      	blx	r3
 800040e:	3601      	adds	r6, #1
 8000410:	e7ee      	b.n	80003f0 <__libc_init_array+0xc>
 8000412:	f855 3b04 	ldr.w	r3, [r5], #4
 8000416:	4798      	blx	r3
 8000418:	3601      	adds	r6, #1
 800041a:	e7f2      	b.n	8000402 <__libc_init_array+0x1e>
 800041c:	08000444 	.word	0x08000444
 8000420:	08000444 	.word	0x08000444
 8000424:	08000444 	.word	0x08000444
 8000428:	08000448 	.word	0x08000448

0800042c <_init>:
 800042c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800042e:	bf00      	nop
 8000430:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000432:	bc08      	pop	{r3}
 8000434:	469e      	mov	lr, r3
 8000436:	4770      	bx	lr

08000438 <_fini>:
 8000438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800043a:	bf00      	nop
 800043c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800043e:	bc08      	pop	{r3}
 8000440:	469e      	mov	lr, r3
 8000442:	4770      	bx	lr
