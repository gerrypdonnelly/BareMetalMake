#include "stm32f4xx.h"
#include "adc.h"

// ADC1 is connected to APB2 so in the RCC_APB2ENR register setting bit 8 enables that clock
#define ADC1EN		(1U<<8)
#define GPIOAEN		(1U<<0)
#define ADC_CH1 	(1U<<0)
#define ADC_SEQ_LEN_1 0x00
#define CR2_ADON (1U<<0)
#define CR2_SWSTART (1U<<30)

#define CR1_EOCIE (1U<<5)

// ADC123 inputs channel 1 are connected to ADC123_IN1 from table 7 in the data sheet.
// This is connected to pin 15 and PA1 of the LQFP64
// Internal temperature sensor is connected to ACD1_IN16

void pa1_adc_init(void)
{
	/*****Configure the ADC GPIO pin******/
	RCC->AHB1ENR |= GPIOAEN; //enable clock access to GPIOA
	//Enable clock to adc pin port (GPIOA) PA1
	//Set mode of PA1 to analog mode, looking at MODER register pin 1 must be set to 11 for analog
	GPIOA->MODER |=(1U<<3);
	GPIOA->MODER |=(1U<<2);
	/*****Configure the ADC peripheral /module*******/

	//Enable clock access to ADC
	RCC->APB2ENR |=ADC1EN;

	/**********Configure ADC parameters*********/
	//configure conversion sequence start
	/*ADC_SQR regular sequence register, SQ1 is sequence 1, place teh channel numbers in this to give channel preference
	*ADC configures with 3 channels
	*ch2, ch3, ch5
	*first  = ch5
	*second = ch2
	*third = ch3
	*for the first sequence place binary 5 in the first sequence location
	*/
	ADC1->SQR3 = ADC_CH1;

	//configure conversion sequence length
	ADC1->SQR1 = ADC_SEQ_LEN_1; //SQR1 L denotes the number of conversions so for just one conversion set L to all 0's

	//Enable the module
	ADC1->CR2 |= CR2_ADON;
}


void start_conversion(void)
{
	//Start the ADC conversion
	//ADC_CR2 SWSTART setting this bit starts the conversion
	ADC1->CR2 |= CR2_SWSTART;
}


uint32_t adc_read(void)
{
	//Wait for conversion to complete
	while (!(ADC1->SR & SR_EOC)){}

	//read conversion result
	return (ADC1->DR);
}


void pa1_adc_interrupt_init(void)
{
	/*****Configure the ADC GPIO pin******/
	RCC->AHB1ENR |= GPIOAEN; //enable clock access to GPIOA
	//Enable clock to adc pin port (GPIOA) PA1
	//Set mode of PA1 to analog mode, looking at MODER register pin 1 must be set to 11 for analog
	GPIOA->MODER |=(1U<<3);
	GPIOA->MODER |=(1U<<2);
	/*****Configure the ADC peripheral /module*******/

	//Enable clock access to ADC
	RCC->APB2ENR |=ADC1EN;

	//Enable ADC end of conversion interrupt
	ADC1->CR1 |= CR1_EOCIE;

	//Enable ADC interrupt in NVIC
	NVIC_EnableIRQ(ADC_IRQn);

	/**********Configure ADC parameters*********/
	//configure conversion sequence start
	/*ADC_SQR regular sequence register, SQ1 is sequence 1, place teh channel numbers in this to give channel preference
	*ADC configures with 3 channels
	*ch2, ch3, ch5
	*first  = ch5
	*second = ch2
	*third = ch3
	*for the first sequence place binary 5 in the first sequence location
	*/
	ADC1->SQR3 = ADC_CH1;

	//configure conversion sequence length
	ADC1->SQR1 = ADC_SEQ_LEN_1; //SQR1 L denotes the number of conversions so for just one conversion set L to all 0's

	//Enable the module
	ADC1->CR2 |= CR2_ADON;
}
